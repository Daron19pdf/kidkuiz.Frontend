[{"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\bestscore.js":"1","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\index.js":"2","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\menu.js":"3","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\quizz.js":"4","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\result.js":"5","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\_app.js":"6","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Answer.js":"7","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Best.js":"8","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Home.js":"9","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Logo.js":"10","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Question.js":"11","C:\\Users\\daron\\kidikuiz\\frontend\\components\\QuizChoice.js":"12","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Start.js":"13"},{"size":224,"mtime":1683126241168,"results":"14","hashOfConfig":"15"},{"size":103,"mtime":1683641800101,"results":"16","hashOfConfig":"15"},{"size":1168,"mtime":1683824745360,"results":"17","hashOfConfig":"15"},{"size":3282,"mtime":1683836776376,"results":"18","hashOfConfig":"15"},{"size":870,"mtime":1683821893115,"results":"19","hashOfConfig":"15"},{"size":1133,"mtime":1683820384878,"results":"20","hashOfConfig":"15"},{"size":942,"mtime":1683627944141,"results":"21","hashOfConfig":"15"},{"size":327,"mtime":1683126273858,"results":"22","hashOfConfig":"15"},{"size":504,"mtime":1683821047423,"results":"23","hashOfConfig":"15"},{"size":880,"mtime":1683301983480,"results":"24","hashOfConfig":"15"},{"size":347,"mtime":1683821062431,"results":"25","hashOfConfig":"15"},{"size":1618,"mtime":1683975855470,"results":"26","hashOfConfig":"15"},{"size":606,"mtime":1683978197761,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dxhnp8",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\bestscore.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\index.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\menu.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\quizz.js",["70"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/quizz.module.css\";\r\nimport Logo from \"../components/Logo\";\r\nimport Question from \"../components/Question\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Answer from \"../components/Answer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { scoreToStore } from \"../reducers/scoring\";\r\n\r\n\r\nfunction Quizz() {\r\n\r\n  const dispatch = useDispatch();\r\n  const [question, setQuestion] = useState()\r\n  const [answers, setAnswers] = useState([]) \r\n  const [correct, setCorrect] = useState()\r\n  const [next, setNext] = useState(1) \r\n  const [answerStatuses, setAnswerStatuses] = useState([null, null, null, null])\r\n  const quizzNumber = useSelector((state) => state.theQuestions.value.number);\r\n  const [score, setScore] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    const fetchQuestions = async () => {\r\n        try {\r\n          const res = await fetch(\"https://kidikuiz-backend.vercel.app/questions\");\r\n          const data = await res.json();\r\n          setQuestion(data.data[quizzNumber - 1][`question${next}`].question);\r\n          setAnswers([data.data[quizzNumber - 1][`question${next}`].answer1,\r\n                      data.data[quizzNumber - 1][`question${next}`].answer2,\r\n                      data.data[quizzNumber - 1][`question${next}`].answer3,\r\n                      data.data[quizzNumber - 1][`question${next}`].answer4]);\r\n          setCorrect(data.data[quizzNumber-1][`question${next}`].correctAnswer);\r\n          setAnswerStatuses([null, null, null, null])\r\n          setError(null);\r\n    }\r\n    catch (err) {\r\n      setError(\"déso ça marche pas\");\r\n      setScore(0);\r\n      setNext(1);\r\n    }\r\n  };\r\n    fetchQuestions();\r\n  }, [next]);\r\n\r\n  const resetAnswers = () => {\r\n    if (next === 10) {\r\n      window.location.href = \"result\";\r\n    }else {\r\n    setNext(next + 1);\r\n    setAnswerStatuses([null, null, null, null]);\r\n    }\r\n  }\r\n\r\n  const scoreUp = () => {\r\n    setScore(score + 1);\r\n    dispatch(scoreToStore(score+1));\r\n  }\r\n\r\n  const raz = () => {\r\n    setNext(1);\r\n    setScore(0);\r\n    window.location.href = \"/menu\";\r\n  }\r\n\r\n  const allAnswer = answers.map((answer, index) => (\r\n    <Answer \r\n      resetAnswers={resetAnswers} \r\n      key={index} \r\n      answer={answer} \r\n      correct={correct}\r\n      scoreUp={scoreUp}\r\n      answerStatus={answerStatuses[index]}\r\n      setAnswerStatus={(status) => {\r\n        let newAnswerStatuses = [...answerStatuses];\r\n        newAnswerStatuses[index] = status;\r\n        setAnswerStatuses(newAnswerStatuses);\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.mep}>\r\n      <Logo />\r\n      <main className={styles.main}>\r\n        <h2 className={styles.title}>Quizz</h2>\r\n        {error ? (\r\n          <div className={styles.error}>\r\n            <p>{error}</p>\r\n            <button onClick={() => raz()}>Recommencer</button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={styles.containerBtn}>\r\n              <Question next={next} question={question} />\r\n            </div>\r\n            <div className={styles.answerContainer}>{allAnswer}</div>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quizz;","C:\\Users\\daron\\kidikuiz\\frontend\\pages\\result.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\pages\\_app.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\components\\Answer.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\components\\Best.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\components\\Home.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\components\\Logo.js",["71"],[],"import React from \"react\";\r\n\r\n\r\nfunction Logo() {\r\n\r\n    const styles = {\r\n        logo: {\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            textAlign: \"center\",\r\n            margin: \"0 auto\",\r\n            backgroundColor: \"#fff\",\r\n            boxShadow: \"0 0 10px rgba(0,0,0,0.5)\",\r\n            borderRadius: \"20px\",\r\n            marginBottom: \"20px\",\r\n            padding: \"5px\",\r\n            marginTop: \"20px\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            height: \"250px\",\r\n            textAlign: \"center\",\r\n            padding: \"5px 0\",\r\n            backgroundColor: \"#f5f5f5\", \r\n            display: \"flex\",\r\n            marginTop: \"0px\",\r\n         }\r\n    }\r\n  return (\r\n    <div style={styles.container}>\r\n      <img  style={styles.logo} src=\"logo.jpg\" alt=\"logo kidikuiz\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n\r\n","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Question.js",[],[],"C:\\Users\\daron\\kidikuiz\\frontend\\components\\QuizChoice.js",["72","73"],[],"import React from \"react\";\r\nimport styles from \"../styles/quizChoice.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { addQuizzToStore } from \"../reducers/theQuestions\";\r\nimport Link from \"next/link\";\r\nimport { useEffect } from \"react\";\r\nimport { addCheckToStore } from \"../reducers/checkQuiz\";\r\n\r\nfunction QuizChoice(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleClick = () => {\r\n        dispatch(addQuizzToStore(props.number))\r\n        dispatch(addCheckToStore({ index : props.index , checked: true }))\r\n    }\r\n\r\n    useEffect(() => {\r\n      // Récupère les valeurs de checkStore depuis localStorage au chargement du composant\r\n      const checkStoreFromStorage = JSON.parse(localStorage.getItem(\"checks\") || \"[]\");\r\n      if (checkStoreFromStorage.length) {\r\n          dispatch(addCheckToStore(checkStoreFromStorage));\r\n      }\r\n    }, []);\r\n      \r\n    useEffect(() => {\r\n      // Stocke les valeurs de checkStore dans localStorage à chaque changement\r\n      localStorage.setItem(\"checks\", JSON.stringify(props.checkStore));\r\n    }, [props.checkStore]);\r\n    \r\n  const index = props.checkStore.findIndex((item) => item.index === props.index);\r\n  const isChecked = index !== -1 && props.checkStore[index].checked;\r\n\r\n  return (\r\n    <div className={styles.containerBtn}>\r\n       <Link href=\"/quizz\"><button onClick={()=> handleClick()} className={styles.button}>Quiz n° {props.number}</button></Link>\r\n       {isChecked && (\r\n   <img className={`${styles.img} ${styles.check}`} src=\"done.png\" alt=\"check\" />\r\n)}\r\n\r\n    </div>\r\n\r\n  );\r\n  \r\n}\r\n\r\nexport default QuizChoice;\r\n","C:\\Users\\daron\\kidikuiz\\frontend\\components\\Start.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":46,"column":6,"nodeType":"76","endLine":46,"endColumn":12,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":31,"column":7,"nodeType":"80","endLine":31,"endColumn":70},{"ruleId":"74","severity":1,"message":"81","line":24,"column":8,"nodeType":"76","endLine":24,"endColumn":10,"suggestions":"82"},{"ruleId":"78","severity":1,"message":"79","line":38,"column":4,"nodeType":"80","endLine":38,"endColumn":82},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quizzNumber'. Either include it or remove the dependency array.","ArrayExpression",["83"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [next, quizzNumber]",{"range":"89","text":"90"},"Update the dependencies array to be: [dispatch]",{"range":"91","text":"92"},[1781,1787],"[next, quizzNumber]",[878,880],"[dispatch]"]